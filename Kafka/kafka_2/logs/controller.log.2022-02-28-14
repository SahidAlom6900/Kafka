[2022-02-28 14:19:30,524] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-02-28 14:19:30,794] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-02-28 14:19:30,827] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 14:19:30,830] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 14:19:30,887] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-02-28 14:19:31,397] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2022-02-28 14:19:31,407] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-02-28 14:19:31,416] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-28 14:19:31,420] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-28 14:19:31,423] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-02-28 14:19:31,488] INFO [Controller id=2] Initialized broker epochs cache: HashMap(1 -> 4294967722, 2 -> 4294967721, 3 -> 4294967720) (kafka.controller.KafkaController)
[2022-02-28 14:19:31,555] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-02-28 14:19:31,583] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-02-28 14:19:31,708] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-02-28 14:19:31,714] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-02-28 14:19:31,741] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-02-28 14:19:31,749] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-02-28 14:19:31,746] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-02-28 14:19:31,741] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-02-28 14:19:31,753] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-02-28 14:19:31,753] INFO [Controller id=2] Current list of topics in the cluster: HashSet(topic01, topic02, topic03, __consumer_offsets) (kafka.controller.KafkaController)
[2022-02-28 14:19:31,753] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-28 14:19:31,760] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-28 14:19:31,760] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-28 14:19:31,760] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-28 14:19:31,764] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-02-28 14:19:31,764] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-28 14:19:31,786] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 14:19:31,799] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 14:19:31,800] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-28 14:19:31,800] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-28 14:19:31,800] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-28 14:19:31,847] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 14:19:31,847] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=topic01,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=topic02,Partition=1,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=topic03,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OnlineReplica, [Topic=topic02,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 14:19:31,847] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 14:19:31,851] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 14:19:31,852] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, topic01-0 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, topic02-0 -> OnlinePartition, topic03-0 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, topic02-1 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, topic02-2 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 14:19:31,852] INFO [Controller id=2] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2022-02-28 14:19:31,856] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-28 14:19:31,856] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-28 14:19:31,856] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-28 14:19:31,856] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-28 14:19:31,856] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-28 14:19:31,984] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-28 14:19:37,001] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:19:37,003] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:19:37,008] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:19:37,011] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:19:37,013] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:19:37,015] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:19:37,015] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:19:37,015] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:24:37,024] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:24:37,024] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:24:37,025] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:24:37,025] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:24:37,025] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:24:37,025] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:24:37,025] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:24:37,025] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:29:37,034] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:29:37,034] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:29:37,035] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:29:37,035] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:29:37,035] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:29:37,035] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:29:37,035] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:29:37,035] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:34:37,045] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:34:37,045] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:34:37,046] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:34:37,046] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:34:37,047] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:34:37,047] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:34:37,047] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:34:37,047] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:39:37,049] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:39:37,049] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:39:37,049] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:39:37,049] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:39:37,050] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:39:37,050] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:39:37,050] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:39:37,050] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:44:37,053] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:44:37,053] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:44:37,054] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:44:37,054] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:44:37,054] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:44:37,054] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:44:37,054] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:44:37,054] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:49:37,056] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:49:37,056] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:49:37,056] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:49:37,056] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:49:37,059] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:49:37,059] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:49:37,059] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:49:37,060] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:54:37,060] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:54:37,060] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:54:37,061] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:54:37,061] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:54:37,061] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:54:37,061] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:54:37,061] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:54:37,061] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:59:37,066] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 14:59:37,066] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 14:59:37,068] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 14:59:37,068] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 14:59:37,068] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 14:59:37,068] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 14:59:37,068] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 14:59:37,068] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)

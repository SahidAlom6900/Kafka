[2022-02-28 19:30:39,606] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-02-28 19:30:39,759] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-02-28 19:30:39,788] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 19:30:39,794] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 19:30:39,849] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-02-28 19:30:40,495] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2022-02-28 19:30:40,503] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-02-28 19:30:40,506] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-28 19:30:40,506] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-28 19:30:40,507] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-02-28 19:30:40,580] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 4294967732) (kafka.controller.KafkaController)
[2022-02-28 19:30:40,645] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-02-28 19:30:40,753] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-02-28 19:30:40,777] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-02-28 19:30:40,777] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-02-28 19:30:40,777] INFO [Controller id=1] Current list of topics in the cluster: HashSet(topic01, topic02, topic03, __consumer_offsets) (kafka.controller.KafkaController)
[2022-02-28 19:30:40,777] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-28 19:30:40,778] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-28 19:30:40,778] INFO [Controller id=1] List of topics ineligible for deletion: topic02,__consumer_offsets (kafka.controller.KafkaController)
[2022-02-28 19:30:40,778] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-28 19:30:40,778] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic02, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-02-28 19:30:40,778] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-28 19:30:40,830] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-28 19:30:40,835] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 19:30:40,836] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 19:30:40,837] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 19:30:40,846] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-28 19:30:41,488] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=topic02,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=topic02,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=topic01,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=topic02,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=topic02,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=topic03,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=topic02,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-02-28 19:30:41,489] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 19:30:41,489] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 19:30:41,597] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, topic01-0 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, topic02-0 -> OnlinePartition, topic03-0 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, topic02-1 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, topic02-2 -> OnlinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-02-28 19:30:41,597] INFO [Controller id=1] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2022-02-28 19:30:41,605] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-28 19:30:41,605] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-28 19:30:41,605] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-28 19:30:41,605] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-28 19:30:41,605] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-28 19:30:41,623] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-28 19:30:41,626] INFO [Controller id=1] Newly added brokers: 2,3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-02-28 19:30:41,626] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-02-28 19:30:41,631] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-02-28 19:30:41,635] INFO [Controller id=1] New broker startup callback for 2,3 (kafka.controller.KafkaController)
[2022-02-28 19:30:41,774] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-28 19:30:41,774] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-28 19:30:41,776] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-28 19:30:41,776] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-28 19:30:41,879] DEBUG [Controller id=1] Register BrokerModifications handler for List(2, 3) (kafka.controller.KafkaController)
[2022-02-28 19:30:41,885] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967732, 2 -> 4294967735, 3 -> 4294967736) (kafka.controller.KafkaController)
[2022-02-28 19:30:42,172] DEBUG [Controller id=1] Updating ISRs for partitions: Set(topic02-0). (kafka.controller.KafkaController)
[2022-02-28 19:30:42,245] DEBUG [Controller id=1] ISR for partition topic02-0 updated to [1,2] and zkVersion updated to [12] (kafka.controller.KafkaController)
[2022-02-28 19:30:42,272] DEBUG [Controller id=1] Updating ISRs for partitions: Set(topic02-2, topic02-1). (kafka.controller.KafkaController)
[2022-02-28 19:30:42,288] DEBUG [Controller id=1] ISR for partition topic02-2 updated to [1,2] and zkVersion updated to [12] (kafka.controller.KafkaController)
[2022-02-28 19:30:42,288] DEBUG [Controller id=1] ISR for partition topic02-1 updated to [1,2] and zkVersion updated to [11] (kafka.controller.KafkaController)
[2022-02-28 19:30:42,828] DEBUG [Controller id=1] Updating ISRs for partitions: Set(topic02-0). (kafka.controller.KafkaController)
[2022-02-28 19:30:42,894] DEBUG [Controller id=1] ISR for partition topic02-0 updated to [1,2,3] and zkVersion updated to [13] (kafka.controller.KafkaController)
[2022-02-28 19:30:42,899] DEBUG [Controller id=1] Updating ISRs for partitions: Set(topic02-2, topic02-1). (kafka.controller.KafkaController)
[2022-02-28 19:30:42,919] DEBUG [Controller id=1] ISR for partition topic02-2 updated to [1,2,3] and zkVersion updated to [13] (kafka.controller.KafkaController)
[2022-02-28 19:30:42,919] DEBUG [Controller id=1] ISR for partition topic02-1 updated to [1,2,3] and zkVersion updated to [12] (kafka.controller.KafkaController)
[2022-02-28 19:30:46,633] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 19:30:46,633] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 19:30:46,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 19:30:46,634] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 19:30:46,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 19:30:46,649] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:30:46,649] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 19:30:46,649] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 19:35:46,654] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 19:40:46,659] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:45:46,668] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 19:45:46,668] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 19:45:46,668] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 19:45:46,668] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 19:45:46,668] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 19:45:46,668] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:45:46,668] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 19:45:46,669] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:50:46,677] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 19:50:46,677] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 19:50:46,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 19:50:46,677] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 19:50:46,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 19:50:46,677] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:50:46,678] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 19:50:46,678] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:55:46,679] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-28 19:55:46,680] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-28 19:55:46,680] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-28 19:55:46,680] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-28 19:55:46,680] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-28 19:55:46,680] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-28 19:55:46,680] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-28 19:55:46,680] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)

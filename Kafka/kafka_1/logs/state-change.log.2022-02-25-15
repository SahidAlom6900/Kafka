[2022-02-25 15:12:55,704] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 3) for 0 partitions (state.change.logger)
[2022-02-25 15:12:55,733] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 1 with 21 become-leader and 0 become-follower partitions (state.change.logger)
[2022-02-25 15:12:55,733] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 3 become-follower partitions (state.change.logger)
[2022-02-25 15:12:55,734] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 3) for 38 partitions (state.change.logger)
[2022-02-25 15:12:55,749] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 21 partitions (state.change.logger)
[2022-02-25 15:12:55,774] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition topic01-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition topic02-2 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition topic02-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition topic02-0 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition topic03-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-47 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-14 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-11 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-44 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-41 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-23 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-20 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-17 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,775] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-32 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,786] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-29 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,786] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-26 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,786] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-8 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,786] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-5 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,786] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-38 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,786] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-35 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,786] INFO [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 4 for partition __consumer_offsets-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2022-02-25 15:12:55,799] INFO [Broker id=1] Finished LeaderAndIsr request in 51ms correlationId 1 from controller 1 for 21 partitions (state.change.logger)
[2022-02-25 15:12:55,820] INFO [Broker id=1] Add 38 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2022-02-25 15:12:55,855] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,855] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,856] INFO [Controller id=1 epoch=4] Partition topic02-1 state changed to (Leader:1,ISR:1,3,LeaderEpoch:3,ZkVersion:5,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,856] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,856] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,856] INFO [Controller id=1 epoch=4] Partition topic02-0 state changed to (Leader:1,ISR:1,3,LeaderEpoch:4,ZkVersion:6,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,856] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,857] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,857] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,857] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,857] INFO [Controller id=1 epoch=4] Partition topic02-2 state changed to (Leader:1,ISR:1,3,LeaderEpoch:4,ZkVersion:6,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,857] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,857] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 1 with 3 become-leader and 0 become-follower partitions (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 3 become-follower partitions (state.change.logger)
[2022-02-25 15:12:55,858] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 3) for 20 partitions (state.change.logger)
[2022-02-25 15:12:55,859] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 3 partitions (state.change.logger)
[2022-02-25 15:12:55,869] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 4 as part of the become-leader transition for 3 partitions (state.change.logger)
[2022-02-25 15:12:55,872] INFO [Broker id=1] Leader topic02-0 starts at leader epoch 4 from offset 754494 with high watermark 754494 ISR [1,3] addingReplicas [] removingReplicas []. Previous leader epoch was 3. (state.change.logger)
[2022-02-25 15:12:55,918] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,921] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,923] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,923] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,926] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,926] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,927] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,927] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,927] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,927] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,927] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2457)
	at kafka.controller.KafkaController.process(KafkaController.scala:2499)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-02-25 15:12:55,932] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-02-25 15:12:56,007] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 3) for 0 partitions (state.change.logger)
[2022-02-25 15:12:56,007] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(2) for 55 partitions (state.change.logger)
[2022-02-25 15:12:56,008] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 20 become-follower partitions (state.change.logger)
[2022-02-25 15:12:56,008] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 20 partitions (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), zkVersion=4) (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2022-02-25 15:12:56,106] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 17 partitions (state.change.logger)
[2022-02-25 15:12:56,109] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 4 for partition topic02-0 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2022-02-25 15:12:56,109] INFO [Broker id=1] Leader topic02-1 starts at leader epoch 3 from offset 737272 with high watermark 737272 ISR [1,3] addingReplicas [] removingReplicas []. Previous leader epoch was 2. (state.change.logger)
[2022-02-25 15:12:56,201] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 4 for partition topic02-1 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2022-02-25 15:12:56,202] INFO [Broker id=1] Leader topic02-2 starts at leader epoch 4 from offset 508514 with high watermark 508514 ISR [1,3] addingReplicas [] removingReplicas []. Previous leader epoch was 3. (state.change.logger)
[2022-02-25 15:12:56,330] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 4 for partition topic02-2 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2022-02-25 15:12:56,330] INFO [Broker id=1] Finished LeaderAndIsr request in 471ms correlationId 3 from controller 1 for 3 partitions (state.change.logger)
[2022-02-25 15:12:56,339] INFO [Broker id=1] Add 20 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2022-02-25 15:12:56,341] INFO [Broker id=1] Add 20 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2022-02-25 15:12:56,342] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2022-02-25 15:12:56,545] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2022-02-25 15:12:56,546] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2022-02-25 15:12:56,589] INFO [Controller id=1 epoch=4] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 2 partitions (state.change.logger)
[2022-02-25 15:12:56,601] INFO [Broker id=1] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)

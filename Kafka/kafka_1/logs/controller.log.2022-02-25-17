[2022-02-25 17:03:01,232] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:03:01,238] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:03:01,239] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:03:01,239] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:03:01,239] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:03:01,239] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:03:01,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:03:01,240] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:08:01,243] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:08:01,243] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:08:01,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:08:01,244] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:08:01,244] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:08:01,244] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:08:01,244] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:08:01,244] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:13:01,254] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:13:01,254] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:13:01,255] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:13:01,255] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:13:01,255] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:13:01,255] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:13:01,255] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:13:01,255] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:18:01,259] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:18:01,259] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:18:01,259] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:18:01,259] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:18:01,260] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:18:01,260] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:18:01,260] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:18:01,260] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:23:01,266] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:23:01,268] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:23:01,268] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:23:01,268] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:23:01,268] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:23:01,268] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:23:01,268] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:23:01,268] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:28:01,284] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:28:01,284] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:28:01,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:28:01,284] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:28:01,285] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:28:01,285] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:28:01,285] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:28:01,285] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:33:01,291] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:33:01,291] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:33:01,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:33:01,291] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:33:01,291] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:33:01,292] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:33:01,292] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:33:01,292] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:38:01,302] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:38:01,302] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:38:01,305] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:38:01,305] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:38:01,305] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:38:01,305] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:38:01,305] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:38:01,305] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:43:01,312] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:43:01,312] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:43:01,314] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:43:01,314] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:43:01,314] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:43:01,314] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:43:01,314] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:43:01,314] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:44:16,266] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-02-25 17:44:16,287] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-02-25 17:44:16,354] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-02-25 17:44:16,368] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-02-25 17:44:16,385] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,395] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,452] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,962] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,975] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,975] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,977] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,981] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-02-25 17:44:16,981] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-02-25 17:44:17,066] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-02-25 17:44:17,565] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2022-02-25 17:44:17,574] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-02-25 17:44:17,584] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-25 17:44:17,584] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-25 17:44:17,592] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-02-25 17:44:17,677] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 4294967646, 2 -> 4294967649, 3 -> 4294967648) (kafka.controller.KafkaController)
[2022-02-25 17:44:17,691] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-02-25 17:44:17,743] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-02-25 17:44:17,814] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-02-25 17:44:17,828] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-02-25 17:44:17,852] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-25 17:44:17,852] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-25 17:44:17,852] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-25 17:44:17,853] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-02-25 17:44:17,853] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-02-25 17:44:17,853] INFO [Controller id=1] Current list of topics in the cluster: HashSet(topic01, topic02, topic03, __consumer_offsets) (kafka.controller.KafkaController)
[2022-02-25 17:44:17,853] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-25 17:44:17,858] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-25 17:44:17,858] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-25 17:44:17,858] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-25 17:44:17,860] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-02-25 17:44:17,860] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-25 17:44:17,889] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-25 17:44:17,889] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-25 17:44:17,894] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-25 17:44:17,894] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-25 17:44:17,895] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-25 17:44:17,922] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-25 17:44:17,927] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=topic01,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=topic02,Partition=1,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=topic03,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OnlineReplica, [Topic=topic02,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-02-25 17:44:17,927] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-25 17:44:17,929] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-25 17:44:17,929] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, topic01-0 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, topic02-0 -> OnlinePartition, topic03-0 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, topic02-1 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, topic02-2 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-02-25 17:44:17,929] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2022-02-25 17:44:17,942] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-25 17:44:17,942] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-25 17:44:17,942] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-25 17:44:17,942] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-25 17:44:17,943] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-25 17:44:18,101] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:44:23,113] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:49:23,129] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:49:23,129] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:49:23,129] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:49:23,129] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:49:23,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:49:23,130] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:49:23,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:49:23,130] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:54:23,134] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:54:23,135] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:54:23,137] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:54:23,137] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:54:23,137] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:54:23,137] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:54:23,137] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:54:23,137] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(topic02-2 -> List(2, 3, 1)) (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(topic02-0 -> List(3, 1, 2)) (kafka.controller.KafkaController)
[2022-02-25 17:59:23,144] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
